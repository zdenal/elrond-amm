{
  "name": "init",
  "comment": "init then check",
  "gasSchedule": "v3",
  "steps": [
    {
      "step": "setState",
      "accounts": {
        "address:owner": {
          "nonce": "1",
          "balance": "0"
        },
        "address:zdenko": {
          "nonce": "1",
          "balance": "100"
        }
      },
      "newAddresses": [
        {
          "creatorAddress": "address:owner",
          "creatorNonce": "1",
          "newAddress": "sc:adder"
        }
      ]
    },
    {
      "step": "scDeploy",
      "txId": "1",
      "tx": {
        "from": "address:owner",
        "contractCode": "file:../output/crowdfunding.wasm",
        "arguments": ["5"],
        "gasLimit": "16,000,000",
        "gasPrice": "0"
      },
      "expect": {
        "out": [],
        "status": "",
        "logs": "*",
        "gas": "*",
        "refund": "*"
      }
    },
    {
      "step": "scQuery",
      "comment": "Faucet Adderr's address",
      "txId": "2",
      "tx": {
        "to": "sc:adder",
        "function": "faucet",
        "arguments": ["100", "200"]
      },
      "expect": {
        "out": [],
        "status": "0",
        "logs": []
      }
    },
    {
      "step": "scQuery",
      "comment": "Adder provide to pool more than he has",
      "txId": "3",
      "tx": {
        "to": "sc:adder",
        "function": "provide",
        "arguments": ["101", "20"]
      },
      "expect": {
        "out": [],
        "status": "4",
        "message": "str:Insufficient Token1 amount",
        "logs": "*",
        "gas": "*",
        "refund": "*"
      }
    },
    {
      "step": "scQuery",
      "comment": "provide to pool",
      "txId": "4",
      "tx": {
        "to": "sc:adder",
        "function": "provide",
        "arguments": ["100", "50"]
      },
      "expect": {
        "out": ["100,000000"],
        "status": "0",
        "logs": "*",
        "gas": "*",
        "refund": "*"
      }
    },
    {
      "step": "scQuery",
      "comment": "get token1 estimate for providing (2 times more than token2 provided (100 - 50)",
      "txId": "5",
      "tx": {
        "to": "sc:adder",
        "function": "getToken1ProvideEstimate",
        "arguments": ["10"]
      },
      "expect": {
        "out": ["20"],
        "status": "0",
        "logs": "*",
        "gas": "*",
        "refund": "*"
      }
    },
    {
      "step": "scQuery",
      "comment": "get token2 estimate for providing (2 times less than token1 provided (100 - 50)",
      "txId": "5",
      "tx": {
        "to": "sc:adder",
        "function": "getToken2ProvideEstimate",
        "arguments": ["10"]
      },
      "expect": {
        "out": ["5"],
        "status": "0",
        "logs": "*",
        "gas": "*",
        "refund": "*"
      }
    }
  ]
}
